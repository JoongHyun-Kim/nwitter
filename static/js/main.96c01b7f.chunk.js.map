{"version":3,"sources":["fBase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebaseConfig","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","REACT_APP_APP_ID","firebase","initializeApp","authService","auth","firebaseInstance","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","data","console","log","icon","faTwitter","color","size","style","marginBottom","faGoogle","marginRight","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","attachmentUrl","refFromURL","toggleEditing","update","autoFocus","src","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","marginTop","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","signOut","push","Navigation","to","display","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","justifyContent","exact","path","Profile","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.96c01b7f.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport 'firebase/storage';\n\nconst firebaseConfig = {\n   apiKey: process.env.REACT_APP_API_KEY,\n   authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n   projectId: process.env.REACT_APP_PROJECT_ID,\n   storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n   messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n   appId: process.env.REACT_APP_APP_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const authService = firebase.auth();\nexport const firebaseInstance = firebase;\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();\n","import React, { useState } from 'react';\nimport { authService } from 'fBase';\n\nconst AuthForm = () => {\n   const [email, setEmail] = useState('');\n   const [password, setPassword] = useState('');\n   const [newAccount, setNewAccount] = useState(true);\n   const [error, setError] = useState('');\n   const onChange = (event) => {\n      const {\n         target: { name, value },\n      } = event;\n      if (name === 'email') {\n         setEmail(value);\n      } else if (name === 'password') {\n         setPassword(value);\n      }\n   };\n   const onSubmit = async (event) => {\n      event.preventDefault();\n      try {\n         let data;\n         if (newAccount) {\n            data = await authService.createUserWithEmailAndPassword(\n               email,\n               password\n            );\n         } else {\n            data = await authService.signInWithEmailAndPassword(\n               email,\n               password\n            );\n         }\n      } catch (error) {\n         setError(error.message);\n      }\n   };\n   const toggleAccount = () => setNewAccount((prev) => !prev);\n   return (\n      <>\n         <form onSubmit={onSubmit} className=\"container\">\n            <input\n               name=\"email\"\n               type=\"text\"\n               placeholder=\"Email\"\n               required\n               value={email}\n               onChange={onChange}\n               className=\"authInput\"\n            />\n            <input\n               name=\"password\"\n               type=\"password\"\n               placeholder=\"Password\"\n               required\n               value={password}\n               onChange={onChange}\n               className=\"authInput\"\n            />\n            <input\n               type=\"submit\"\n               value={newAccount ? 'Create Account' : 'Sign In'}\n               className=\"authInput authSubmit\"\n            />\n            {error && <span className=\"authError\">{error}</span>}\n         </form>\n         <span onClick={toggleAccount} className=\"authSwitch\">\n            {newAccount ? 'Sign in' : 'Create Account'}\n         </span>\n      </>\n   );\n};\n\nexport default AuthForm;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n   faTwitter,\n   faGoogle,\n   faGithub,\n} from '@fortawesome/free-brands-svg-icons';\nimport { authService, firebaseInstance } from 'fBase';\nimport AuthForm from 'components/AuthForm';\n\nconst Auth = () => {\n   const onSocialClick = async (event) => {\n      const {\n         target: { name },\n      } = event;\n      let provider;\n      if (name === 'google') {\n         provider = new firebaseInstance.auth.GoogleAuthProvider();\n      } else if (name === 'github') {\n         provider = new firebaseInstance.auth.GithubAuthProvider();\n      }\n      const data = await authService.signInWithPopup(provider);\n      console.log(data);\n   };\n\n   return (\n      <div className=\"authContainer\">\n         <FontAwesomeIcon\n            icon={faTwitter}\n            color={'#04AAFF'}\n            size=\"3x\"\n            style={{ marginBottom: 30 }}\n         />\n         <AuthForm />\n         <div className=\"authBtns\">\n            <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n               <FontAwesomeIcon icon={faGoogle} style={{ marginRight: 3 }} />\n               Continue with Google\n            </button>\n            <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n               <FontAwesomeIcon icon={faGithub} style={{ marginRight: 3 }} />\n               Continue with Github\n            </button>\n         </div>\n      </div>\n   );\n};\n\nexport default Auth;\n","import React, { useState } from 'react';\nimport { dbService, storageService } from 'fBase';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash, faPencilAlt } from '@fortawesome/free-solid-svg-icons';\n\nconst Nweet = ({ nweetObj, isOwner }) => {\n   const [editing, setEditing] = useState(false);\n   const [newNweet, setNewNweet] = useState(nweetObj.text);\n   const onDeleteClick = async () => {\n      const ok = window.confirm('Are you sure you want to delete this nweet?');\n      if (ok) {\n         await dbService.doc(`nweets/${nweetObj.id}`).delete();\n         if (nweetObj.attachmentUrl !== '') {\n            await storageService.refFromURL(nweetObj.attachmentUrl).delete();\n         }\n      }\n   };\n   const toggleEditing = () => setEditing((prev) => !prev);\n   const onSubmit = async (event) => {\n      event.preventDefault();\n      await dbService.doc(`nweets/${nweetObj.id}`).update({\n         text: newNweet,\n      });\n      setEditing(false);\n   };\n   const onChange = (event) => {\n      const {\n         target: { value },\n      } = event;\n      setNewNweet(value);\n   };\n   return (\n      <div className=\"nweet\">\n         {editing ? (\n            <>\n               {isOwner && (\n                  <>\n                     <form onSubmit={onSubmit} className=\"container nweetEdit\">\n                        <input\n                           type=\"text\"\n                           placeholder=\"Edit your nweet!\"\n                           value={newNweet}\n                           required\n                           autoFocus\n                           onChange={onChange}\n                           className=\"formInput\"\n                        />\n                        <input\n                           type=\"submit\"\n                           value=\"Update Nweet!\"\n                           className=\"formBtn\"\n                        />\n                     </form>\n                     <span\n                        onClick={toggleEditing}\n                        className=\"formBtn cancelBtn\"\n                     >\n                        Cancel\n                     </span>\n                  </>\n               )}\n            </>\n         ) : (\n            <>\n               <h4>{nweetObj.text}</h4>\n               {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\n               {isOwner && (\n                  <div className=\"nweet__actions\">\n                     <span onClick={onDeleteClick}>\n                        <FontAwesomeIcon icon={faTrash} />\n                     </span>\n                     <span onClick={toggleEditing}>\n                        <FontAwesomeIcon icon={faPencilAlt} />\n                     </span>\n                  </div>\n               )}\n            </>\n         )}\n      </div>\n   );\n};\n\nexport default Nweet;\n","import React, { useState } from 'react';\nimport { dbService, storageService } from 'fBase';\nimport { v4 as uuidv4 } from 'uuid';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faTimes } from '@fortawesome/free-solid-svg-icons';\n\nconst NweetFactory = ({ userObj }) => {\n   const [nweet, setNweet] = useState('');\n   const [attachment, setAttachment] = useState('');\n   const onSubmit = async (event) => {\n      if (nweet === '') {\n         return;\n      }\n      event.preventDefault();\n      let attachmentUrl = '';\n      if (attachment !== '') {\n         const attachmentRef = storageService\n            .ref()\n            .child(`${userObj.uid}/${uuidv4()}`);\n         const response = await attachmentRef.putString(attachment, 'data_url');\n         attachmentUrl = await response.ref.getDownloadURL();\n      }\n      const nweetObj = {\n         text: nweet,\n         createdAt: Date.now(),\n         creatorId: userObj.uid,\n         attachmentUrl,\n      };\n      await dbService.collection('nweets').add(nweetObj);\n      setNweet('');\n      setAttachment('');\n   };\n   const onChange = (event) => {\n      const {\n         target: { value },\n      } = event;\n      setNweet(value);\n   };\n   const onFileChange = (event) => {\n      const {\n         target: { files },\n      } = event;\n      const theFile = files[0];\n      const reader = new FileReader();\n      reader.onloadend = (finishedEvent) => {\n         const {\n            currentTarget: { result },\n         } = finishedEvent;\n         setAttachment(result);\n      };\n      reader.readAsDataURL(theFile);\n   };\n   const onClearAttachment = () => setAttachment('');\n   return (\n      <form onSubmit={onSubmit} className=\"factoryForm\">\n         <div className=\"factoryInput__container\">\n            <input\n               className=\"factoryInput__input\"\n               value={nweet}\n               onChange={onChange}\n               type=\"text\"\n               placeholder=\"Let's Nweet!\"\n               maxLength={120}\n            />\n            <input\n               type=\"submit\"\n               value=\"&rarr;\"\n               className=\"factoryInput__arrow\"\n            />\n         </div>\n         <label for=\"attach-file\" className=\"factoryInput__label\">\n            <span>Add photos</span>\n            <FontAwesomeIcon icon={faPlus} />\n         </label>\n         <input\n            id=\"attach-file\"\n            type=\"file\"\n            accept=\"image/*\"\n            onChange={onFileChange}\n            style={{\n               opacity: 0,\n            }}\n         />\n         {attachment && (\n            <div className=\"factoryForm__attachment\">\n               <img\n                  src={attachment}\n                  style={{\n                     backgroundImage: attachment,\n                  }}\n               />\n               <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n                  <FontAwesomeIcon icon={faTimes} />\n               </div>\n            </div>\n         )}\n      </form>\n   );\n};\n\nexport default NweetFactory;\n","import React, { useEffect, useState } from 'react';\nimport { dbService } from 'fBase';\nimport Nweet from 'components/Nweet';\nimport NweetFactory from 'components/NweetFactory';\n\nconst Home = ({ userObj }) => {\n   const [nweets, setNweets] = useState([]);\n   useEffect(() => {\n      dbService.collection('nweets').onSnapshot((snapshot) => {\n         const nweetArray = snapshot.docs.map((doc) => ({\n            id: doc.id,\n            ...doc.data(),\n         }));\n         setNweets(nweetArray);\n      });\n   }, []);\n   return (\n      <div className=\"container\">\n         <NweetFactory userObj={userObj} />\n         <div style={{ marginTop: 30 }}>\n            {nweets.map((nweet) => (\n               <Nweet\n                  key={nweet.id}\n                  nweetObj={nweet}\n                  isOwner={nweet.creatorId === userObj.uid}\n               />\n            ))}\n         </div>\n      </div>\n   );\n};\nexport default Home;\n","import React, { useState } from 'react';\nimport { authService, dbService } from 'fBase';\nimport { useHistory } from 'react-router-dom';\n\nexport default ({ refreshUser, userObj }) => {\n   const history = useHistory();\n   const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n   const onLogOutClick = () => {\n      authService.signOut();\n      history.push('/');\n   };\n   const onChange = (event) => {\n      const {\n         target: { value },\n      } = event;\n      setNewDisplayName(value);\n   };\n   const onSubmit = async (event) => {\n      event.preventDefault();\n      if (userObj.displayName !== newDisplayName) {\n         await userObj.updateProfile({\n            displayName: newDisplayName,\n         });\n         refreshUser();\n      }\n   };\n   return (\n      <div className=\"container\">\n         <form onSubmit={onSubmit} className=\"profileForm\">\n            <input\n               onChange={onChange}\n               type=\"text\"\n               placeholder=\"Display name\"\n               value={newDisplayName}\n               autoFocus\n               className=\"formInput\"\n            />\n            <input\n               type=\"submit\"\n               value=\"Update Profile\"\n               className=\"formBtn\"\n               style={{\n                  marginTop: 10,\n               }}\n            />\n         </form>\n         <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n            Log Out\n         </span>\n      </div>\n   );\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTwitter } from '@fortawesome/free-brands-svg-icons';\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\n\nconst Navigation = ({ userObj }) => (\n   <nav>\n      <ul>\n         <li>\n            <Link\n               to=\"/\"\n               style={{ display: 'flex', marginTop: 25, marginLeft: 25 }}\n            >\n               <FontAwesomeIcon icon={faTwitter} color={'#04AAFF'} size=\"2x\" />\n            </Link>\n         </li>\n         <li>\n            <Link\n               to=\"/profile\"\n               style={{\n                  display: 'flex',\n                  flexDirection: 'column',\n                  alignItems: 'center',\n                  fontSize: 12,\n                  marginTop: 50,\n               }}\n            >\n               <FontAwesomeIcon icon={faUser} color={'#04AAFF'} size=\"3x\" />\n               <span\n                  style={{\n                     marginTop: 10,\n                  }}\n               >\n                  {userObj.displayName\n                     ? `${userObj.displayName}'s Profile`\n                     : 'Profile'}\n               </span>\n            </Link>\n         </li>\n      </ul>\n   </nav>\n);\nexport default Navigation;\n","import React, { useState } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Auth from 'routes/Auth';\nimport Home from 'routes/Home';\nimport Profile from 'routes/Profile';\nimport Navigation from 'components/Navigation';\n\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\n   return (\n      <Router>\n         {isLoggedIn && <Navigation userObj={userObj} />}\n         <Switch>\n            {isLoggedIn ? (\n               <div\n                  style={{\n                     maxWidth: 890,\n                     width: '100%',\n                     margin: '0 auto',\n                     marginTop: 80,\n                     display: 'flex',\n                     justifyContent: 'center',\n                  }}\n               >\n                  <Route exact path=\"/\">\n                     <Home userObj={userObj} />\n                  </Route>\n                  <Route exact path=\"/Profile\">\n                     <Profile userObj={userObj} refreshUser={refreshUser} />\n                  </Route>\n               </div>\n            ) : (\n               <>\n                  <Route exact path=\"/\">\n                     <Auth />\n                  </Route>\n               </>\n            )}\n         </Switch>\n      </Router>\n   );\n};\n\nexport default AppRouter;\n","import React, { useEffect, useState } from 'react';\nimport AppRouter from 'components/Router';\nimport { authService } from 'fBase';\n\nfunction App() {\n   const [init, setInit] = useState(false);\n   const [userObj, setUserObj] = useState(null);\n   useEffect(() => {\n      authService.onAuthStateChanged((user) => {\n         if (user) {\n            setUserObj({\n               displayName: user.displayName,\n               uid: user.uid,\n               updateProfile: (args) => user.updateProfile(args),\n            });\n         } else {\n            setUserObj(null);\n         }\n         setInit(true);\n      });\n   }, []);\n   const refreshUser = () => {\n      const user = authService.currentUser;\n      setUserObj({\n         displayName: user.displayName,\n         uid: user.uid,\n         updateProfile: (args) => user.updateProfile(args),\n      });\n   };\n   return (\n      <>\n         {init ? (\n            <AppRouter\n               refreshUser={refreshUser}\n               isLoggedIn={Boolean(userObj)}\n               userObj={userObj}\n            />\n         ) : (\n            'Initializing...'\n         )}\n      </>\n   );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport 'styles.css';\n\nReactDOM.render(\n   <React.StrictMode>\n      <App />\n   </React.StrictMode>,\n   document.getElementById('root')\n);\n"],"sourceRoot":""}